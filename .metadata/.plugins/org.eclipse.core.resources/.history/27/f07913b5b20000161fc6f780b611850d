/**
 * 
 */
package com.frankstar.WebSpider;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * @author frankstar
 * @function 爬虫
 */
public class Spider {
	
	static String getResults(String url) {
		String results = "";
		//定义个缓冲输入流
		BufferedReader br = null;
		//定义一个URL对象
		try {
			URL realUrl = new URL(url);
			//初始化一个链接
			URLConnection uc = realUrl.openConnection();
			//打开链接
			uc.connect();
			//初始化缓冲输入流
			br = new BufferedReader(new InputStreamReader(uc.getInputStream()));
			//逐行读取
			String line = "";
			while ((line = br.readLine()) != null) {
				results += line;
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			try {
				if (br != null) {
					br.close();
				}
			}catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
		return results;
	}
	
	static ArrayList<Zhihu> getZhihu(String content){
		ArrayList<Zhihu> results = new ArrayList<Zhihu>();
		//用来匹配question
		Pattern questionPattern = Pattern.compile("question_link.+?>(.+?)<");
		Matcher questionMatcher = questionPattern.matcher(content);
		//用来匹配qLink
		Pattern qLinkPattern = Pattern.compile("question_link.*?href=\"(.*?)\"");
		Matcher qLinkMatcher = qLinkPattern.matcher(content);
		//问题和链接均能匹配到
		boolean isFind = questionMatcher.find() && qLinkMatcher.find();
		
		while (isFind) {
			//定义一个知乎对象来存储抓去到的信息
			Zhihu zhihuTemp = new Zhihu();
			zhihuTemp.question = questionMatcher.group(1);
			zhihuTemp.qLink = "http://www.zhihu.com" + qLinkMatcher.group(1)
		}
		return results;
		
	}
}
